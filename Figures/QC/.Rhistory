setwd("E:\\Onedrive\\OneDrive - Indian Institute of Science\\Internship data May-July 2019\\Final plots\\final\\Vishnu/RACIPE_upd/")
library(tidyverse)
library(ggthemes)
f <- list.files(path = "." ,pattern = "S_data",recursive = T)
dummy <- lapply(f, function(x){#browser()
d <- read.csv(x, stringsAsFactors = F)
pdf(str_extract(x, ".+/") %>% str_remove("/") %>% paste0(".pdf"))
print(ggplot(d, aes(x = JSD, y = plast)) + geom_point() + geom_smooth(method = "lm") +
#geom_text(aes(x = max(JSD), y = max(plast), label = cor(JSD, plast)))+
facet_wrap(facets = d$pos_cycle, ncol = 1) +
theme_stata() + theme(axis.text = element_text(size = 16)))
dev.off()
d
}) %>% reduce(rbind.data.frame)
max_pos <- sapply(f, function(x){#browser()
d <- read.csv(x, stringsAsFactors = F)
max(d$pos_cycle)
}) %>% sort %>% names
by_pos <- lapply(max_pos, function(x){
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(correlation = cor(JSD, plast))
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "JSD_Plasticity_cor", -pos_cycle)
ggplot(by_pos, aes(x = Circuit, y = pos_cycle, fill = JSD_Plasticity_cor)) +geom_tile()
write.csv(by_pos, "Postive_JSD_plas.csv")
f <- list.files(path = "." ,pattern = "S_data",recursive = T)[-1]
dummy <- lapply(f, function(x){#browser()
d <- read.csv(x, stringsAsFactors = F)
pdf(str_extract(x, ".+/") %>% str_remove("/") %>% paste0(".pdf"))
print(ggplot(d, aes(x = JSD, y = plast)) + geom_point() + geom_smooth(method = "lm") +
#geom_text(aes(x = max(JSD), y = max(plast), label = cor(JSD, plast)))+
facet_wrap(facets = d$pos_cycle, ncol = 1) +
theme_stata() + theme(axis.text = element_text(size = 16)))
dev.off()
d
}) %>% reduce(rbind.data.frame)
max_pos <- sapply(f, function(x){#browser()
d <- read.csv(x, stringsAsFactors = F)
max(d$pos_cycle)
}) %>% sort %>% names
by_pos <- lapply(max_pos, function(x){
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(correlation = cor(JSD, plast))
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "JSD_Plasticity_cor", -pos_cycle)
ggplot(by_pos, aes(x = Circuit, y = pos_cycle, fill = JSD_Plasticity_cor)) +geom_tile()
write.csv(by_pos, "Postive_JSD_plas.csv")
by_pos <- by_pos %>% spread(key = Circuit, value = JSD_Plasticity_cor)
View(by_pos)
write.csv(by_pos, "Postive_JSD_plas_S.csv", row.names = F)
write.csv(by_pos, "Postive_JSD_plas_S.csv", row.names = F)
x <- randu
x
cor.test(x$x, x$y)
p <- cor.test(x$x, x$y)
p$statistic
p$p.value
p_val_pos <- lapply(max_pos, function(x){
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor.test(JSD, plast)$p.value)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "pValue", -pos_cycle)
p_val_pos <- lapply(max_pos, function(x){browser()
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor.test(JSD, plast)$p.value)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "pValue", -pos_cycle)
p_val_pos <- lapply(max_pos, function(x){browser()
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor.test(JSD, plast)$p.value)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "pValue", -pos_cycle)
p_val_pos <- lapply(max_pos, function(x){browser()
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor.test(JSD, plast)$p.value)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "pValue", -pos_cycle)
d <- read.csv(x, stringsAsFactors = F)
View(d)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor.test(JSD, plast)$p.value)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor.test(JSD, plast))
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>% summarise(pValue = cor(JSD, plast))
View(d)
d <- read.csv(x, stringsAsFactors = F)
View(d)
d <- d %>% select(JSD, plast, pos_cycle)
View(d)
cor.test(d$JSD[d$pos_cycle == 5], d$plast[d$pos_cycle == 5])
?cor.test
cor.test(d$JSD[d$pos_cycle == 5], d$plast[d$pos_cycle == 5], method = "pearson")
cor.test(d$JSD[d$pos_cycle == 5], d$plast[d$pos_cycle == 5], method = "spearman")
cor.test(d$JSD[d$pos_cycle == 5], d$plast[d$pos_cycle == 5], method = "spearman")$p.value
cor.test(d$JSD[d$pos_cycle == 5], d$plast[d$pos_cycle == 5], method = "spearman")$statistic
v <- cor.test(d$JSD[d$pos_cycle == 5], d$plast[d$pos_cycle == 5], method = "spearman")
v$statistic
v$parameter
by_pos <- lapply(max_pos, function(x){
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>%
summarise(correlation = cor.test(JSD, plast, method = "spearman"))
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "JSD_Plasticity_cor", -pos_cycle)
by_pos <- lapply(max_pos, function(x){
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>%
summarise(correlation = cor.test(JSD, plast, method = "spearman")$statistic)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "JSD_Plasticity_cor", -pos_cycle)
p_val_pos <- lapply(max_pos, function(x){#browser()
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>%
summarise(pValue = cor.test(JSD, plast, method = "spearman")$p.value)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "pValue", -pos_cycle)
View(p_val_pos)
write.csv(by_pos, "Postive_JSD_plas_S.csv", row.names = F)
write.csv(p_val_pos, "Postive_JSD_plas_pVal_S.csv", row.names = F)
write.csv(by_pos, "Postive_JSD_plas_S.csv", row.names = F)
by_pos <- by_pos %>% spread(key = Circuit, value = JSD_Plasticity_cor)
p_val_pos <- by_pos %>% spread(key = Circuit, value = pValue)
p_val_pos <- p_val_pos %>% spread(key = Circuit, value = pValue)
write.csv(by_pos, "Postive_JSD_plas_S.csv", row.names = F)
write.csv(p_val_pos, "Postive_JSD_plas_pVal_S.csv", row.names = F)
by_pos <- lapply(max_pos, function(x){
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>%
summarise(correlation = cor.test(JSD, plast, method = "spearman")$estimate)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "JSD_Plasticity_cor", -pos_cycle)
p_val_pos <- lapply(max_pos, function(x){#browser()
colname <- str_extract(x, ".+/") %>% str_remove("/")
d <- read.csv(x, stringsAsFactors = F)
d <- d %>% select(JSD, plast, pos_cycle) %>% group_by(pos_cycle) %>%
summarise(pValue = cor.test(JSD, plast, method = "spearman")$p.value)
colnames(d)[2] <- colname
d
}) %>% reduce(merge, by = "pos_cycle", all = T) %>% gather(key = "Circuit", value = "pValue", -pos_cycle)
by_pos <- by_pos %>% spread(key = Circuit, value = JSD_Plasticity_cor)
p_val_pos <- p_val_pos %>% spread(key = Circuit, value = pValue)
write.csv(by_pos, "Postive_JSD_plas_S.csv", row.names = F)
write.csv(p_val_pos, "Postive_JSD_plas_pVal_S.csv", row.names = F)
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/ANOVA plots")
f <- list.files(".", "R_data")
df <- lapply(f, function(x){
read.csv(x, stringsAsFactors = F) %>% select(plast, plast_2, JSD, pos_cycle) %>% mutate(network = x %>% str_remove("_R_data.csv"))
}) %>% reduce(rbind.data.frame, stringsAsFactors=F)
f <- list.files(".", "R_data", recursive = T)
df <- lapply(f, function(x){
read.csv(x, stringsAsFactors = F) %>% select(plast, plast_2, JSD, pos_cycle) %>% mutate(network = x %>% str_remove("_R_data.csv"))
}) %>% reduce(rbind.data.frame, stringsAsFactors=F)
write.csv(df, "Combined_data.csv", row.names = F)
df <- df[-which(df$JSD == 0), ]
df$logJSD <- log(df$JSD)
df$JSD_tag <- floor(df$logJSD)
corr_df <- df %>% select(plast, JSD_tag, network, pos_cycle) %>% split.data.frame(df$network) %>%
lapply(function(x){
y <- x %>% group_by(JSD_tag) %>% summarise(correlation = cor.test(plast, pos_cycle)$estimate)
colnames(y)[2] <- unique(x$network)
y
}) %>% reduce(merge, by = "JSD_tag", all = T)
corr_df <- df %>% select(plast, JSD_tag, network, pos_cycle) %>% split.data.frame(df$network) %>%
lapply(function(x){
y <- x %>% group_by(JSD_tag) %>% summarise(correlation = cor.test(plast, pos_cycle, method = "spearman")$estimate)
colnames(y)[2] <- unique(x$network)
y
}) %>% reduce(merge, by = "JSD_tag", all = T)
log(2)
log(10)
library(tidyverse)
library(stringr)
library(magrittr)
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/QC")
f <- list.files(".", "csv")
dummy <- lapply(f, function(x){browser()
nam <- str_remove(x, "_QC.csv")
df <- read.csv(x)
colnames(df) <- c("State", "Average", "Sdev")
n_states <- length(unique(df$State))
df <- df[-(1:n_states),]
df$Number <- rep(c("100", "1000", "10000", "100000"), each = n_states)
df <- df[-(which(df$Average < max(df$Average)/100)), ]
n_states <- length(unique(df$State))
df <- df[order(df$Average, decreasing = T), ]
states <- unique(df$State)
coor1 <- cbind.data.frame(State = states, Coord1 = 1:n_states)
coor2 <- cbind.data.frame(Number = c("100", "1000", "10000", "100000"), Coord2 = c(-0.3, -0.15, 0, 0.15))
df %<>% merge(coor1, by = "State", all = T) %<>% merge(coor2, by = "Number", all = T) %<>%
mutate(Coord = Coord1 + Coord2) %<>%
select(State, Average, Sdev, Coord, Number)
write.csv(df, paste0(nam, "_QC1.csv"))
dir.create(nam)
df_list <- split.data.frame(df, df$Number)
dum <- sapply(df_list, function(y){
setwd(nam)
n <- unique(y$Number)
write.csv(y, paste0(n, ".csv"))
setwd("..")
})
})
View(df)
df <- df[complete.cases(df),]
View(df)
df$State <- df[, 1:3] %>% apply(1, function(x){
x[3] + 2*x[2] + 4*x[1]
})
df <- df[, -(1:3)]
View(df)
View(df)
colnames(df) <- c("Average", "Sdev", "State")
n_states <- length(unique(df$State))
df <- df[-(1:n_states),]
df$Number <- rep(c("100", "1000", "10000", "100000"), each = n_states)
View(df)
nam <- str_remove(x, "_QC.csv")
df <- read.csv(x)
df <- df[complete.cases(df),]
df$State <- df[, 1:3] %>% apply(1, function(x){
x[3] + 2*x[2] + 4*x[1]
})
df <- df[, -(1:3)]
View(df)
colnames(df) <- c("Average", "Sdev", "State")
View(df)
nam <- str_remove(x, "_QC.csv")
df <- read.csv(x)
df <- df[complete.cases(df),]
df$State <- df[, 1:3] %>% apply(1, function(x){
x[3] + 2*x[2] + 4*x[1]
})
df <- df[, -(1:3)]
View(df)
colnames(df) <- c("Average", "Sdev", "Number", "State")
n_states <- length(unique(df$State))
#df <- df[-(1:n_states),]
#df$Number <- rep(c("100", "1000", "10000", "100000"), each = n_states)
df <- df[-(which(df$Average < max(df$Average)/100)), ]
nam <- str_remove(x, "_QC.csv")
df <- read.csv(x)
df <- df[complete.cases(df),]
df$State <- df[, 1:3] %>% apply(1, function(x){
x[3] + 2*x[2] + 4*x[1]
})
df <- df[, -(1:3)]
colnames(df) <- c("Average", "Sdev", "Number", "State")
n_states <- length(unique(df$State))
df$Average < max(df$Average)/100)
df$Average < max(df$Average)/100
which(df$Average < max(df$Average)/100)
#df <- df[-(1:n_states),]
#df$Number <- rep(c("100", "1000", "10000", "100000"), each = n_states)
#df <- df[-(which(df$Average < max(df$Average)/100)), ]
#n_states <- length(unique(df$State))
df <- df[order(df$Average, decreasing = T), ]
states <- unique(df$State)
coor1 <- cbind.data.frame(State = states, Coord1 = 1:n_states)
coor2 <- cbind.data.frame(Number = c("100", "1000", "10000", "100000"), Coord2 = c(-0.3, -0.15, 0, 0.15))
df %<>% merge(coor1, by = "State", all = T) %<>% merge(coor2, by = "Number", all = T) %<>%
mutate(Coord = Coord1 + Coord2) %<>%
select(State, Average, Sdev, Coord, Number)
write.csv(df, paste0(nam, "_QC1.csv"))
dir.create(nam)
df_list <- split.data.frame(df, df$Number)
dum <- sapply(df_list, function(y){
setwd(nam)
n <- unique(y$Number)
write.csv(y, paste0(n, ".csv"))
setwd("..")
})
