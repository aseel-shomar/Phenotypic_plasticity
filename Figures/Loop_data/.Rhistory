library(tidyverse)
install.packages("tidyverse")
install.packages("devtools")
devtools::install_github("rstudio/reticulate")
library(reticulate)
py_available()
use_python("C:\Program Files (x86)\Python38")
use_python("C:/Program Files (x86)/Python38")
py_available()
setwd("E:/Github_projects/Phenotypic_plasticity/codes/Feedback_loops")
setwd("E:/Github_projects/Phenotypic_plasticity/Data/topo_files")
# set working directory to the topo_files directory
library(tidyverse)
library(stringr)
filez <- list.files(".", "topo")
netwroks <- filez %>% str_remove(".topo")
command <- paste0("python ../../codes/Feedback_loops/Positive_loops.py ", paste(filez, collapse = " "))
system(command)
dir.create("../../Figures/Loop_data")
system("mv *csv ../../Figures/Loop_data")
setwd("../../Figures/Loop_data")
edgelist <- function(x){
x <- str_split(x, ",") %>% unlist
l <- length(x)
x <- c(x, x[1])
x_mod <- sapply(1:l, function(y){
paste(x[c(y, y+1)],collapse = ",")
})
}
filez <- list.files(".", ".csv")
dummy <- lapply(filez, function(x){
df <- read.csv(x)
loopEdges <- sapply(df$Cycles[df$Nature == "P"], edgelist) %>% lapply(function(y){
d <- data.frame(table(y))
colnames(d) <- c("Edges", "Freq")
d
}) %>% reduce(merge, by = "Edges", all = T)
loopEdges[is.na(loopEdges)] <- 0
loopLengths <- lapply(2:ncol(loopEdges), function(y){
cycle <- df$Cycles[y]
cycle_length <- length(cycle %>% str_split(",") %>% unlist)
loopEdges[, y]*cycle_length
}) %>% reduce(cbind.data.frame)
nloopEdges <- sapply(df$Cycles[df$Nature == "N"], edgelist) %>% lapply(function(y){
d <- data.frame(table(y))
colnames(d) <- c("Edges", "Freq")
d
})
if (length(nloopEdges) > 0)
nloopEdges <- nloopEdges%>% reduce(merge, by = "Edges", all = T)
else
nloopEdges <- data.frame(x = 1,y = 1)
nloopEdges[is.na(nloopEdges)] <- 0
nloopLengths <- lapply(2:ncol(nloopEdges), function(y){
cycle <- df$Cycles[y]
cycle_length <- length(cycle %>% str_split(",") %>% unlist)
nloopEdges[, y]*cycle_length
}) %>% reduce(cbind.data.frame) %>% data.frame
d <- data.frame(Edges = loopEdges$Edges, pLoopCount = rowSums(loopEdges[, -1]),
pLoopLengthAvg = apply(loopLengths, 1, function(x){sum(x)/sum(x!=0)}),
pLoopLengthStd = apply(loopLengths, 1, sd))
if (is.data.frame(nloopEdges[, -1]))
{
d1 <- data.frame(Edges = nloopEdges$Edges, nLoopCount = rowSums(nloopEdges[, -1]),
nLoopLengthAvg = apply(nloopLengths, 1, function(x){sum(x)/sum(x!=0)}),
nLoopLengthStd = apply(nloopLengths, 1, sd))
d <- merge(d, d1, by = "Edges", all = T)}
d[is.na(d)] <- 0
write.csv(d, paste0(str_remove(x, ".csv"), "_edges.csv"))
d
})
filez <- filez[!str_detect(filez, "edge")]
dummy <- lapply(filez, function(x){
df <- read.csv(x)
loopEdges <- sapply(df$Cycles[df$Nature == "P"], edgelist) %>% lapply(function(y){
d <- data.frame(table(y))
colnames(d) <- c("Edges", "Freq")
d
}) %>% reduce(merge, by = "Edges", all = T)
loopEdges[is.na(loopEdges)] <- 0
loopLengths <- lapply(2:ncol(loopEdges), function(y){
cycle <- df$Cycles[y]
cycle_length <- length(cycle %>% str_split(",") %>% unlist)
loopEdges[, y]*cycle_length
}) %>% reduce(cbind.data.frame)
nloopEdges <- sapply(df$Cycles[df$Nature == "N"], edgelist) %>% lapply(function(y){
d <- data.frame(table(y))
colnames(d) <- c("Edges", "Freq")
d
})
if (length(nloopEdges) > 0)
nloopEdges <- nloopEdges%>% reduce(merge, by = "Edges", all = T)
else
nloopEdges <- data.frame(x = 1,y = 1)
nloopEdges[is.na(nloopEdges)] <- 0
nloopLengths <- lapply(2:ncol(nloopEdges), function(y){
cycle <- df$Cycles[y]
cycle_length <- length(cycle %>% str_split(",") %>% unlist)
nloopEdges[, y]*cycle_length
}) %>% reduce(cbind.data.frame) %>% data.frame
d <- data.frame(Edges = loopEdges$Edges, pLoopCount = rowSums(loopEdges[, -1]),
pLoopLengthAvg = apply(loopLengths, 1, function(x){sum(x)/sum(x!=0)}),
pLoopLengthStd = apply(loopLengths, 1, sd))
if (is.data.frame(nloopEdges[, -1]))
{
d1 <- data.frame(Edges = nloopEdges$Edges, nLoopCount = rowSums(nloopEdges[, -1]),
nLoopLengthAvg = apply(nloopLengths, 1, function(x){sum(x)/sum(x!=0)}),
nLoopLengthStd = apply(nloopLengths, 1, sd))
d <- merge(d, d1, by = "Edges", all = T)}
d[is.na(d)] <- 0
write.csv(d, paste0(str_remove(x, ".csv"), "_edges.csv"))
d
})
