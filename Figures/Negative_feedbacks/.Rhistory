axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(breaks = round(seq(m, M, length.out = 7), 3)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 7), 3)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
summary(d$Correlation)
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 8), 3)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 10), 3)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 15), 3)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 15), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
m <- min(d$Correlation)
M <- 1
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 15), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(5)), breaks = round(seq(m, M, length.out = 7), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(6)), breaks = round(seq(m, M, length.out = 7), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(9)), breaks = round(seq(m, M, length.out = 7), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(7)), breaks = round(seq(m, M, length.out = 7), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
pdf("Correlation_data.pdf")
ggplot(d, aes(x = Comps, y = Comps2, fill = Correlation)) + geom_tile() + theme_stata() +
scale_fill_gradientn(colors = rev(rainbow(7)), breaks = round(seq(m, M, length.out = 7), 2)) +
theme(axis.title = element_blank(), axis.text.x = element_text(angle = 90),
axis.text.y = element_text(angle = 0), legend.position = "right")
dev.off()
load("/media/csb1/Data/IIITD/original_data/new1/final_ctc_signature_E_M_ordering.Rdata")
View(order_matrix_data)
results <- "/media/csb1/Data/GRHL2_perturbations/"
setwd(results)
masters <- list.files(pattern = "boolean_m", recursive = T)
mdf <- lapply(masters, read.delim)
comps <- colnames(mdf[[1]])[-ncol(mdf[[1]])]
mdf <- mdf %>% reduce(merge, by = comps, all = T)
mdf[is.na(mdf)] <- 0
library(philentropy)
df <- JSD(t(as.matrix(mdf[, -(1:4)]))) %>% data.frame
View(df)
colnames(df) <- colnames(mdf)[-(1:4)]
View(df)
df$States <- colnames(df)
View(df)
df <- JSD(t(as.matrix(mdf[, -(1:4)]))) %>% data.frame
colnames(df) <- colnames(mdf)[-(1:4)]
df <- JSD(t(as.matrix(mdf[, -(1:4)]))) %>% data.frame
colnames(df) <- colnames(mdf)[-(1:4)]
df$Circuit <- colnames(df)
df <- JSD(t(as.matrix(mdf[, -(1:4)]))) %>% data.frame
colnames(df) <- colnames(mdf)[-(1:4)]
df <- cbind.data.frame(Circuit = colnames(df), df)
write.csv(df, "JSD_GRHL2.csv", row.names = F)
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks")
source('E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks/script.R')
sapply(filez, Perturber)
source('E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks/script.R')
source('E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks/script.R')
read.delim(filez[1])
source('E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks/script.R')
read.delim(filez[1])
read.delim(filez[1], sep = " ")
source('E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks/script.R')
install.packages("reticulate")
library(reticulate)
use_python("C:/Program Files (x86)/Python37-32/python.exe", required = T)
py_config()
use_python("C:/Program Files (x86)/Python38/python.exe", required = T)
py_config()
use_python("C:/Program Files (x86)/Python38", required = T)
py_config()
source_python("JSD_plas.py")
py_available()
py_discover_config()
source_python("JSD_plas.py")
remove.packages("reticulate")
install.packages("devtools")
install.packages("processx")
install.packages("devtools", type = "source")
install.packages("usethis", type = "source")
install.packages("fs", type = "source")
install.packages("remotes")
library(remote)
library(remotes)
install_github("rstudio/reticulate")
install_github("rstudio/reticulate")
install.packages("Rtools")
install_github("rstudio/reticulate")
install_github("rstudio/reticulate")
install.packages("reticulate")
library(reticulate)
use_python("C:/Program Files (x86)/Python38", required = T)
py_config()
install_github("rstudio/reticulate")
install.packages("Rcpp")
install.packages("Rcpp")
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks")
Perturber <- function(topo_file, directory = getwd()){browser()
library(tidyverse)
library(magrittr)
library(stringr)
if(!dir.exists(directory)) dir.create(directory)
topo_name <- topo_file %>% str_remove(".topo")
topo_original <- read.delim(topo_file, stringsAsFactors = F, sep = " ")
components <- unique(c(topo_original$Source, topo_original$Target))
network_total <- data.frame(Source = rep(components, each = length(components)),
Target = rep(components, length(components)),
Act = 1, Inh = 2) %>% gather(key = "Name", value = "Type", -Source, -Target)
network_total <- network_total[, -3]
colnames(topo_original)[3] <- "Type_o"
network_total <- merge(network_total, topo_original, by = c("Source", "Target"), all = T)
network_total[is.na(network_total)] <- 0
network_total <- network_total[, c(1,2,4,3)]
colnames(network_total)[3] <- "Old"
colnames(topo_original)[3] <- "Type"
df_list <- apply(network_total, 1, function(x){#browser()
df <- topo_original
if (x[3] == x[4])
{
x[4] <- 0
df <- df[-which(df$Source == x[1] & df$Target == x[2]),]
}
else if(x[3] == 0)
df <- rbind.data.frame(df, x[c(1,2,4)])
else
df$Type[df$Source == x[1] & df$Target == x[2]] <- x[4]
name <- paste0(x, collapse = "")
if(!str_detect(directory, "/$")) directory %<>% paste0("/")
write_delim(df, paste0(directory, topo_name, "_", name, ".topo"), delim = "\t")
})
}
filez <- list.files(".", "topo")
sapply(filez, Perturber)
Perturber <- function(topo_file, directory = getwd()){browser()
library(tidyverse)
library(magrittr)
library(stringr)
directory = str_remove(topo_file, ".topo")
if(!dir.exists(directory)) dir.create(directory)
topo_name <- topo_file %>% str_remove(".topo")
topo_original <- read.delim(topo_file, stringsAsFactors = F, sep = " ")
components <- unique(c(topo_original$Source, topo_original$Target))
network_total <- data.frame(Source = rep(components, each = length(components)),
Target = rep(components, length(components)),
Act = 1, Inh = 2) %>% gather(key = "Name", value = "Type", -Source, -Target)
network_total <- network_total[, -3]
colnames(topo_original)[3] <- "Type_o"
network_total <- merge(network_total, topo_original, by = c("Source", "Target"), all = T)
network_total[is.na(network_total)] <- 0
network_total <- network_total[, c(1,2,4,3)]
colnames(network_total)[3] <- "Old"
colnames(topo_original)[3] <- "Type"
df_list <- apply(network_total, 1, function(x){#browser()
df <- topo_original
if (x[3] == x[4])
{
x[4] <- 0
df <- df[-which(df$Source == x[1] & df$Target == x[2]),]
}
else if(x[3] == 0)
df <- rbind.data.frame(df, x[c(1,2,4)])
else
df$Type[df$Source == x[1] & df$Target == x[2]] <- x[4]
name <- paste0(x, collapse = "")
if(!str_detect(directory, "/$")) directory %<>% paste0("/")
write_delim(df, paste0(directory, topo_name, "_", name, ".topo"), delim = " ")
})
}
Perturber <- function(topo_file, directory = getwd()){#browser()
library(tidyverse)
library(magrittr)
library(stringr)
directory = str_remove(topo_file, ".topo")
if(!dir.exists(directory)) dir.create(directory)
topo_name <- topo_file %>% str_remove(".topo")
topo_original <- read.delim(topo_file, stringsAsFactors = F, sep = " ")
components <- unique(c(topo_original$Source, topo_original$Target))
network_total <- data.frame(Source = rep(components, each = length(components)),
Target = rep(components, length(components)),
Act = 1, Inh = 2) %>% gather(key = "Name", value = "Type", -Source, -Target)
network_total <- network_total[, -3]
colnames(topo_original)[3] <- "Type_o"
network_total <- merge(network_total, topo_original, by = c("Source", "Target"), all = T)
network_total[is.na(network_total)] <- 0
network_total <- network_total[, c(1,2,4,3)]
colnames(network_total)[3] <- "Old"
colnames(topo_original)[3] <- "Type"
df_list <- apply(network_total, 1, function(x){#browser()
df <- topo_original
if (x[3] == x[4])
{
x[4] <- 0
df <- df[-which(df$Source == x[1] & df$Target == x[2]),]
}
else if(x[3] == 0)
df <- rbind.data.frame(df, x[c(1,2,4)])
else
df$Type[df$Source == x[1] & df$Target == x[2]] <- x[4]
name <- paste0(x, collapse = "_")
if(!str_detect(directory, "/$")) directory %<>% paste0("/")
write_delim(df, paste0(directory, topo_name, "_", name, ".topo"), delim = " ")
})
}
filez <- list.files(".", "topo")
sapply(filez, Perturber)
Perturber <- function(topo_file, directory = getwd()){#browser()
library(tidyverse)
library(magrittr)
library(stringr)
directory = str_remove(topo_file, ".topo")
if(!dir.exists(directory)) dir.create(directory)
topo_name <- topo_file %>% str_remove(".topo")
topo_original <- read.delim(topo_file, stringsAsFactors = F, sep = " ")
components <- unique(c(topo_original$Source, topo_original$Target))
network_total <- data.frame(Source = rep(components, each = length(components)),
Target = rep(components, length(components)),
Act = 1, Inh = 2) %>% gather(key = "Name", value = "Type", -Source, -Target)
network_total <- network_total[, -3]
colnames(topo_original)[3] <- "Type_o"
network_total <- merge(network_total, topo_original, by = c("Source", "Target"), all = T)
network_total[is.na(network_total)] <- 0
network_total <- network_total[, c(1,2,4,3)]
colnames(network_total)[3] <- "Old"
colnames(topo_original)[3] <- "Type"
df_list <- apply(network_total, 1, function(x){#browser()
df <- topo_original
if (x[3] == x[4])
{
x[4] <- 0
df <- df[-which(df$Source == x[1] & df$Target == x[2]),]
}
else if(x[3] == 0)
df <- rbind.data.frame(df, x[c(1,2,4)])
else
df$Type[df$Source == x[1] & df$Target == x[2]] <- x[4]
name <- paste0(x, collapse = "_")
if(!str_detect(directory, "/$")) directory %<>% paste0("/")
write_delim(df, paste0(directory, topo_name, "_", name, ".topo"), delim = " ")
})
0
}
filez <- list.files(".", "topo")
dummy <- sapply(filez, Perturber)
Perturber <- function(topo_file, directory = getwd()){#browser()
library(tidyverse)
library(magrittr)
library(stringr)
directory = str_remove(topo_file, ".topo")
if(!dir.exists(directory)) dir.create(directory)
topo_name <- topo_file %>% str_remove(".topo")
topo_original <- read.delim(topo_file, stringsAsFactors = F, sep = " ")
components <- unique(c(topo_original$Source, topo_original$Target))
network_total <- data.frame(Source = rep(components, each = length(components)),
Target = rep(components, length(components)),
Act = 1, Inh = 2) %>% gather(key = "Name", value = "Type", -Source, -Target)
network_total <- network_total[, -3]
colnames(topo_original)[3] <- "Type_o"
network_total <- merge(network_total, topo_original, by = c("Source", "Target"), all = T)
network_total[is.na(network_total)] <- 0
network_total <- network_total[, c(1,2,4,3)]
colnames(network_total)[3] <- "Old"
colnames(topo_original)[3] <- "Type"
df_list <- apply(network_total, 1, function(x){#browser()
df <- topo_original
if (x[3] == x[4])
{
x[4] <- 0
df <- df[-which(df$Source == x[1] & df$Target == x[2]),]
}
else if(x[3] == 0)
df <- rbind.data.frame(df, x[c(1,2,4)])
else
df$Type[df$Source == x[1] & df$Target == x[2]] <- x[4]
name <- paste0(x, collapse = "_")
if(!str_detect(directory, "/$")) directory %<>% paste0("/")
write_delim(df, paste0(directory, name, ".topo"), delim = " ")
})
0
}
filez <- list.files(".", "topo")
dummy <- sapply(filez, Perturber)
setwd("GRHL2")
ls
ls()
system("python JSD_plas.py GRHL2.topo")
p <- system("python JSD_plas.py GRHL2.topo")
p <- system("python JSD_plas.py GRHL2.topo") %>% capture.output
system("python JSD_plas.py GRHL2.topo > pos.txt")
readLines("pos.txt")
system("python JSD_plas.py GRHL2.topo > pos.txt")
system("python JSD_plas.py GRHL2.topo > pos.txt")
readLines("pos.txt")
system("python JSD_plas.py GRHL2.topo > pos.txt")
system("python JSD_plas.py GRHL2.topo > pos.txt")
readLines("pos.txt")
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks")
list.dirs()
folders <- filez %>% str_remove(".topo")
setwd("GRHL2/")
p <- readLines("pos.txt")
p <- readLines("pos.txt") %>% str_remove("[") %>% str_remove("]") %>% str_split(",")
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",")
p
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",") %>% unlist
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks")
dummy <- lapply(folders, function(x){
setwd(x)
f <- list.files("topo")
df <- lapply(f, function(y){
n <- str_remove(y, ".topo")
command <- paste0("python JSD_plas.py ", y)
system(command)
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",") %>% unlist
c(y, p)
}) %>% reduce(rbind.data.frame)
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
dummy <- lapply(folders, function(x){browser()
setwd(x)
f <- list.files("topo")
df <- lapply(f, function(y){
n <- str_remove(y, ".topo")
command <- paste0("python JSD_plas.py ", y)
system(command)
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",") %>% unlist
c(y, p)
}) %>% reduce(rbind.data.frame)
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
setwd("..")
dummy <- lapply(folders, function(x){browser()
setwd(x)
f <- list.files("topo")
df <- lapply(f, function(y){
n <- str_remove(y, ".topo")
command <- paste0("python JSD_plas.py ", y)
system(command)
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",") %>% unlist
c(y, p)
}) %>% reduce(rbind.data.frame)
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
dummy <- lapply(folders, function(x){browser()
setwd(x)
f <- list.files(".", "topo")
df <- lapply(f, function(y){
n <- str_remove(y, ".topo")
command <- paste0("python JSD_plas.py ", y)
system(command)
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",") %>% unlist
c(y, p)
}) %>% reduce(rbind.data.frame)
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
n
setwd("..")
dummy <- lapply(folders, function(x){browser()
setwd(x)
f <- list.files(".", "topo")
df <- lapply(f, function(y){
n <- str_remove(y, ".topo")
command <- paste0("python JSD_plas.py ", y)
system(command)
p <- readLines("pos.txt") %>% str_remove("\\[") %>% str_remove("\\]") %>% str_split(",") %>% unlist
c(y, p)
}) %>% reduce(rbind.data.frame)
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
getwd()
setwd("../GRHL2/")
f <- list.files(".", "topo")
df <- lapply(f, function(y){
n <- str_remove(y, ".topo")
command <- paste0("python JSD_plas.py ", y)
system(command)
})
d <- readLines(pos.txt)
d <- readLines("pos.txt")
d
d %>% str_split("\\]\\[")
d %>% str_split("\\]\\[") %>% unlist %>% str_split(",")
d %>% str_split("\\]\\[") %>% unlist %>% str_split(",") %>% reduce(rbind.data.frame)
f
getwd()
system(paste0("python test.py", f))
system(paste0("python test.py", paste0(f, collapse = " ")))
system(paste0("python test.py ", paste0(f, collapse = " ")))
system(paste0("python test.py ", paste0(f, collapse = " ")))
getwd()
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
system(command)
system(command)
system(command)
system(command)
system(command)
system(command)
f <- list.files(".", "topo")
system(command)
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
system(command)
system(command)
system(command)
system(command)
system(command)
setwd("..")
dummy <- lapply(folders, function(x){browser()
setwd(x)
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
df <- read.csv("pos.csv")
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
setwd("..")
dummy <- lapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
df <- read.csv("pos.csv")
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
setwd("..")
dummy <- lapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
df <- read.csv("pos.csv")
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
getwd()
f <- list.files(".", "topo")
getwd()
setwd("E:/Onedrive/OneDrive - Indian Institute of Science/Internship data May-July 2019/Final plots/final/Kishore/Negative_feedbacks")
dummy <- lapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
df <- read.csv("pos.csv")
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
})
getwd()
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
df <- read.csv("pos.csv")
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
x <- "OCT4"
write.csv(df, paste0(x, ".csv"), row.names = F)
x <- "OVOL2"
setwd(x)
f <- list.files(".", "topo")
command <- paste0("python JSD_plas.py ", paste(f, collapse = " "))
system(command)
df <- read.csv("pos.csv")
colnames(df) <- c("Network", "Pos_loops", "Neg_loops")
setwd("..")
write.csv(df, paste0(x, ".csv"), row.names = F)
